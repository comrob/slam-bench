services:
  play_bag:
    image: ghcr.io/sevahul/slam-bench:latest
    init: true
    container_name: play_bag
    user: "1000:1000"  # Run container as host user
    environment:
      - BAGFILES_PATH_HOST=${BAGFILES_PATH_HOST}
      - DATASET_NAME=${DATASET_NAME}
      - BAGFILE_NAME=${BAGFILE_NAME}
      - ROS_HOME=/tmp/.ros
      - ROSBAG_PLAY_RATE=${ROSBAG_PLAY_RATE}
      - SENSOR_TRACKS=${SENSOR_TRACKS}
      - OUTPUT_FILE_NAME=${OUTPUT_FILE_NAME}
    volumes:
      - ${BAGFILES_PATH_HOST}:/rosbag_files
      - ${OUTPUT_PATH_HOST}:/trajectory_files
    network_mode: "host"
  
  evaluate_trajectory:
    init: true
    image: ghcr.io/sevahul/slam-bench:latest
    container_name: evaluate_trajectory
    user: "1000:1000"  # Run container as host user
    environment:
      - TEST_MODE=${TEST_MODE}
      - DATASET_NAME=${DATASET_NAME}
      - REFERENCE_TRAJECTORY_FILE=${REFERENCE_TRAJECTORY_FILE}
      - ESTIMATED_TRAJECTORY_FILE=${ESTIMATED_TRAJECTORY_FILE}
    volumes:
      - ${BAGFILES_PATH_HOST}:/rosbag_files
      - ${OUTPUT_PATH_HOST}:/trajectory_files
    entrypoint: ["/rosbag_player/entrypoint_evaluate.sh"]
  
  run_slam_nvidia:
    image: ${SLAM_IMAGE:-$CRL_SLAM_IMAGE}
    container_name: run_slam_nvidia
    network_mode: "host"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    environment:
      - DISPLAY=${DISPLAY}
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
  
  run_slam:
    image: ${SLAM_IMAGE:-$CRL_SLAM_IMAGE}
    container_name: run_slam
    network_mode: "host"
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    environment:
      - DISPLAY=${DISPLAY}
  
